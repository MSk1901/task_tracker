"""change time to UTC

Revision ID: 637d49a23aea
Revises: dc1359df4260
Create Date: 2024-06-11 17:58:19.236328

"""
from typing import Sequence, Union

import sqlalchemy_utc
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '637d49a23aea'
down_revision: Union[str, None] = 'dc1359df4260'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('task', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sqlalchemy_utc.sqltypes.UtcDateTime(timezone=True),
               existing_nullable=False,
               existing_server_default=sa.text('now()'))
    op.alter_column('task', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sqlalchemy_utc.sqltypes.UtcDateTime(timezone=True),
               existing_nullable=True)
    op.alter_column('task', 'deadline',
               existing_type=postgresql.TIMESTAMP(),
               type_=sqlalchemy_utc.sqltypes.UtcDateTime(timezone=True),
               existing_nullable=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('task', 'deadline',
               existing_type=sqlalchemy_utc.sqltypes.UtcDateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=False)
    op.alter_column('task', 'updated_at',
               existing_type=sqlalchemy_utc.sqltypes.UtcDateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True)
    op.alter_column('task', 'created_at',
               existing_type=sqlalchemy_utc.sqltypes.UtcDateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=False,
               existing_server_default=sa.text('now()'))
    # ### end Alembic commands ###
